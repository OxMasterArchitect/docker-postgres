version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: unless-stopped

    environment:
      # Core database configuration
      POSTGRES_DB: ${POSTGRES_DB:-postgres_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres_password}

      # Additional PostgreSQL settings
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"

      # Performance tuning (can be overridden)
      POSTGRES_SHARED_PRELOAD_LIBRARIES: "pg_stat_statements"

    ports:
      - "${POSTGRES_PORT:-5432}:5432"

    volumes:
      # Persistent data storage
      - postgres_data:/var/lib/postgresql/data

      # Custom configuration file (optional)
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro

      # Initialization scripts (optional)
      - ./init-scripts:/docker-entrypoint-initdb.d:ro

      # Backup directory (optional)
      - ./backups:/backups

      # Utility scripts
      - ./scripts:/scripts:ro

    # Use custom configuration file
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf

    # Health check
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres_db}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

    # Security settings
    security_opt:
      - no-new-privileges:true

    # Network configuration
    networks:
      - postgres_network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped

    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password}
      PGADMIN_LISTEN_PORT: 80

    ports:
      - "${PGADMIN_PORT:-8080}:80"

    volumes:
      - pgadmin_data:/var/lib/pgadmin

    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - postgres_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  postgres_network:
    name: postgres_network
    driver: bridge
